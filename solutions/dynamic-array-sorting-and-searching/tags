!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
$(TARGET)	Makefile	/^$(TARGET): CFLAGS += -fPIC$/;"	t
$(TARGET)	Makefile	/^$(TARGET): build $(OBJECTS)$/;"	t
ByteOf	src/radixmap.c	/^#define ByteOf(/;"	d	file:
CFLAGS	Makefile	/^CFLAGS=-g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG $(OPTFLAGS)$/;"	m
CFLAGS	Makefile	/^dev: CFLAGS= -g -Wall -Isrc -Wall -Wextra -fsanitize=undefined $(OPTFLAGS)$/;"	m
DArray	src/darray.h	/^typedef struct DArray {$/;"	s
DArray	src/darray.h	/^} DArray;$/;"	t	typeref:struct:DArray
DArray_clear	src/darray.c	/^void DArray_clear(DArray * array)$/;"	f	typeref:typename:void
DArray_clear_destroy	src/darray.c	/^void DArray_clear_destroy(DArray * array)$/;"	f	typeref:typename:void
DArray_compare	src/darray_algos.h	/^typedef int (*DArray_compare) (const void *a, const void *b);$/;"	t	typeref:typename:int (*)(const void * a,const void * b)
DArray_contract	src/darray.c	/^int DArray_contract(DArray * array)$/;"	f	typeref:typename:int
DArray_count	src/darray.h	/^#define DArray_count(/;"	d
DArray_create	src/darray.c	/^DArray * DArray_create(size_t element_size, size_t initial_max)$/;"	f	typeref:typename:DArray *
DArray_destroy	src/darray.c	/^void DArray_destroy(DArray * array)$/;"	f	typeref:typename:void
DArray_end	src/darray.h	/^#define DArray_end(/;"	d
DArray_expand	src/darray.c	/^int DArray_expand(DArray * array)$/;"	f	typeref:typename:int
DArray_first	src/darray.h	/^#define DArray_first(/;"	d
DArray_free	src/darray.h	/^#define DArray_free(/;"	d
DArray_get	src/darray.h	/^static inline void *DArray_get(DArray * array, int i)$/;"	f	typeref:typename:void *
DArray_last	src/darray.h	/^#define DArray_last(/;"	d
DArray_max	src/darray.h	/^#define DArray_max(/;"	d
DArray_mergesort	src/darray_algos.c	/^int DArray_mergesort(DArray * array, DArray_compare cmp)$/;"	f	typeref:typename:int
DArray_new	src/darray.h	/^static inline void *DArray_new(DArray * array) {$/;"	f	typeref:typename:void *
DArray_pop	src/darray.c	/^void *DArray_pop(DArray * array)$/;"	f	typeref:typename:void *
DArray_push	src/darray.c	/^int DArray_push(DArray * array, void * el)$/;"	f	typeref:typename:int
DArray_qsort	src/darray_algos.c	/^int DArray_qsort(DArray * array, DArray_compare cmp)$/;"	f	typeref:typename:int
DArray_remove	src/darray.h	/^static inline void *DArray_remove(DArray * array, int i)$/;"	f	typeref:typename:void *
DArray_resize	src/darray.c	/^static inline int DArray_resize(DArray * array, size_t newsize)$/;"	f	typeref:typename:int	file:
DArray_set	src/darray.h	/^static inline void DArray_set(DArray * array, int i, void *el)$/;"	f	typeref:typename:void
DEFAULT_EXPAND_RATE	src/darray.h	/^#define DEFAULT_EXPAND_RATE /;"	d
Ex 35, sorting and searching	README.md	/^# Ex 35, sorting and searching$/;"	c
LDFLAGS	Makefile	/^LDFLAGS=$(OPTLIBS)$/;"	m
OBJECTS	Makefile	/^OBJECTS=$(patsubst %.c,%.o,$(SOURCES))$/;"	m
PREFIX	Makefile	/^PREFIX?=\/usr\/local$/;"	m
RMElement	src/radixmap.h	/^typedef union RMElement {$/;"	u
RMElement	src/radixmap.h	/^} RMElement;$/;"	t	typeref:union:RMElement
RUN_TESTS	tests/minunit.h	/^#define RUN_TESTS(/;"	d
RadixMap	src/radixmap.h	/^typedef struct RadixMap {$/;"	s
RadixMap	src/radixmap.h	/^} RadixMap;$/;"	t	typeref:struct:RadixMap
RadixMap_add	src/radixmap.c	/^int RadixMap_add(RadixMap * map, uint32_t key, uint32_t value)$/;"	f	typeref:typename:int
RadixMap_create	src/radixmap.c	/^RadixMap *RadixMap_create(size_t max)$/;"	f	typeref:typename:RadixMap *
RadixMap_delete	src/radixmap.c	/^int RadixMap_delete(RadixMap * map, RMElement * el)$/;"	f	typeref:typename:int
RadixMap_destroy	src/radixmap.c	/^void RadixMap_destroy(RadixMap * map)$/;"	f	typeref:typename:void
RadixMap_find	src/radixmap.c	/^RMElement *RadixMap_find(RadixMap * map, uint32_t to_find)$/;"	f	typeref:typename:RMElement *
RadixMap_sort	src/radixmap.c	/^void RadixMap_sort(RadixMap * map)$/;"	f	typeref:typename:void
SOURCES	Makefile	/^SOURCES=$(wildcard src\/**\/*.c src\/*.c)$/;"	m
TARGET	Makefile	/^TARGET=build\/liblcthw.a$/;"	m
TESTS	Makefile	/^TESTS=$(patsubst %.c,%,$(TEST_SRC))$/;"	m
TEST_SRC	Makefile	/^TEST_SRC=$(wildcard tests\/*_tests.c)$/;"	m
TYPE_FLOAT	src/ex35.c	/^	TYPE_FLOAT,$/;"	e	enum:__anon596f41120103	file:
TYPE_INT	src/ex35.c	/^	TYPE_INT,$/;"	e	enum:__anon596f41120103	file:
TYPE_STRING	src/ex35.c	/^	TYPE_STRING,$/;"	e	enum:__anon596f41120103	file:
Variant	src/ex35.c	/^struct Variant {$/;"	s	file:
Variant	src/ex35.c	/^typedef struct Variant Variant;$/;"	t	typeref:struct:Variant	file:
VariantType	src/ex35.c	/^} VariantType;$/;"	t	typeref:enum:__anon596f41120103	file:
Variant_print	src/ex35.c	/^void Variant_print(Variant * var)$/;"	f	typeref:typename:void
_DArray_h	src/darray.h	/^#define _DArray_h$/;"	d
__anon58c08f080108	src/radixmap.h	/^	struct {$/;"	s	union:RMElement
__anon596f41120103	src/ex35.c	/^typedef enum {$/;"	g	file:
__anon596f4112020a	src/ex35.c	/^	union {$/;"	u	struct:Variant	file:
__dbg_h__	src/dbg.h	/^#define __dbg_h__$/;"	d
_mergesort_h	src/mergesort.h	/^#define _mergesort_h$/;"	d
_minunit_h	tests/minunit.h	/^#define _minunit_h$/;"	d
all	Makefile	/^all: $(TARGET) tests$/;"	t
all_tests	tests/darray_algos_tests.c	/^char *all_tests()$/;"	f	typeref:typename:char *
all_tests	tests/darray_tests.c	/^char *all_tests()$/;"	f	typeref:typename:char *
all_tests	tests/radixmap_tests.c	/^char *all_tests()$/;"	f	typeref:typename:char *
array	tests/darray_tests.c	/^static DArray * array = NULL;$/;"	v	typeref:typename:DArray *	file:
as_float	src/ex35.c	/^		float as_float;$/;"	m	union:Variant::__anon596f4112020a	typeref:typename:float	file:
as_integer	src/ex35.c	/^		int as_integer;$/;"	m	union:Variant::__anon596f4112020a	typeref:typename:int	file:
as_string	src/ex35.c	/^		char *as_string;$/;"	m	union:Variant::__anon596f4112020a	typeref:typename:char *	file:
build	Makefile	/^build:$/;"	t
check	Makefile	/^check:$/;"	t
check	src/dbg.h	/^#define check(/;"	d
check_debug	src/dbg.h	/^#define check_debug(/;"	d
check_mem	src/dbg.h	/^#define check_mem(/;"	d
check_order	tests/radixmap_tests.c	/^static int check_order(RadixMap * map)$/;"	f	typeref:typename:int	file:
clean	Makefile	/^clean: $/;"	t
clean_errno	src/dbg.h	/^#define clean_errno(/;"	d
contents	src/darray.h	/^  void **contents;$/;"	m	struct:DArray	typeref:typename:void **
contents	src/radixmap.h	/^	RMElement *contents;$/;"	m	struct:RadixMap	typeref:typename:RMElement *
counter	src/radixmap.h	/^	uint32_t counter;$/;"	m	struct:RadixMap	typeref:typename:uint32_t
create_words	tests/darray_algos_tests.c	/^DArray *create_words()$/;"	f	typeref:typename:DArray *
darray_algos_h	src/darray_algos.h	/^#define darray_algos_h$/;"	d
data	src/ex35.c	/^	} data;$/;"	m	struct:Variant	typeref:union:Variant::__anon596f4112020a	file:
data	src/radixmap.h	/^	} data;$/;"	m	union:RMElement	typeref:struct:RMElement::__anon58c08f080108
debug	src/dbg.h	/^#define debug(/;"	d
dev	Makefile	/^dev: CFLAGS= -g -Wall -Isrc -Wall -Wextra -fsanitize=undefined $(OPTFLAGS)$/;"	t
dev	Makefile	/^dev: all$/;"	t
element_size	src/darray.h	/^  size_t element_size;$/;"	m	struct:DArray	typeref:typename:size_t
end	src/darray.h	/^  int end;$/;"	m	struct:DArray	typeref:typename:int
end	src/radixmap.h	/^	size_t end;$/;"	m	struct:RadixMap	typeref:typename:size_t
expand_rate	src/darray.h	/^  size_t expand_rate;$/;"	m	struct:DArray	typeref:typename:size_t
install	Makefile	/^install: all$/;"	t
is_sorted	tests/darray_algos_tests.c	/^int is_sorted(DArray * array)$/;"	f	typeref:typename:int
key	src/radixmap.h	/^		uint32_t key;$/;"	m	struct:RMElement::__anon58c08f080108	typeref:typename:uint32_t
log_err	src/dbg.h	/^#define log_err(/;"	d
log_info	src/dbg.h	/^#define log_info(/;"	d
log_warn	src/dbg.h	/^#define log_warn(/;"	d
main	src/ex35.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
make_random	tests/radixmap_tests.c	/^static int make_random(RadixMap * map)$/;"	f	typeref:typename:int	file:
max	src/darray.h	/^  int max;$/;"	m	struct:DArray	typeref:typename:int
max	src/radixmap.h	/^	size_t max;$/;"	m	struct:RadixMap	typeref:typename:size_t
mu_assert	tests/minunit.h	/^#define mu_assert(/;"	d
mu_run_test	tests/minunit.h	/^#define mu_run_test(/;"	d
mu_suite_start	tests/minunit.h	/^#define mu_suite_start(/;"	d
radix_sort	src/radixmap.c	/^static inline void radix_sort(short offset, uint64_t max,$/;"	f	typeref:typename:void	file:
raw	src/radixmap.h	/^	uint64_t raw;$/;"	m	union:RMElement	typeref:typename:uint64_t
run_sort_test	tests/darray_algos_tests.c	/^char *run_sort_test(int (*func) (DArray *, DArray_compare), const char *name)$/;"	f	typeref:typename:char *
sentinel	src/dbg.h	/^#define sentinel(/;"	d
temp	src/radixmap.h	/^	RMElement *temp;$/;"	m	struct:RadixMap	typeref:typename:RMElement *
test_create	tests/darray_tests.c	/^char *test_create()$/;"	f	typeref:typename:char *
test_destroy	tests/darray_tests.c	/^char *test_destroy()$/;"	f	typeref:typename:char *
test_expand_contract	tests/darray_tests.c	/^char *test_expand_contract()$/;"	f	typeref:typename:char *
test_get	tests/darray_tests.c	/^char *test_get()$/;"	f	typeref:typename:char *
test_new	tests/darray_tests.c	/^char *test_new()$/;"	f	typeref:typename:char *
test_operations	tests/radixmap_tests.c	/^static char *test_operations()$/;"	f	typeref:typename:char *	file:
test_push_pop	tests/darray_tests.c	/^char *test_push_pop()$/;"	f	typeref:typename:char *
test_qsort	tests/darray_algos_tests.c	/^char *test_qsort()$/;"	f	typeref:typename:char *
test_remove	tests/darray_tests.c	/^char *test_remove()$/;"	f	typeref:typename:char *
test_search	tests/radixmap_tests.c	/^static int test_search(RadixMap * map)$/;"	f	typeref:typename:int	file:
test_set	tests/darray_tests.c	/^char *test_set()$/;"	f	typeref:typename:char *
testcmp	tests/darray_algos_tests.c	/^int testcmp(char **a, char **b)$/;"	f	typeref:typename:int
tests	Makefile	/^tests: $(TESTS)$/;"	t
tests	Makefile	/^tests: LDLIBS += $(TARGET)$/;"	t
tests_run	tests/minunit.h	/^int tests_run;$/;"	v	typeref:typename:int
type	src/ex35.c	/^	VariantType type;$/;"	m	struct:Variant	typeref:typename:VariantType	file:
val1	tests/darray_tests.c	/^static int *val1 = NULL;$/;"	v	typeref:typename:int *	file:
val2	tests/darray_tests.c	/^static int *val2 = NULL;$/;"	v	typeref:typename:int *	file:
valgrind	Makefile	/^valgrind:$/;"	t
value	src/radixmap.h	/^		uint32_t value;$/;"	m	struct:RMElement::__anon58c08f080108	typeref:typename:uint32_t
