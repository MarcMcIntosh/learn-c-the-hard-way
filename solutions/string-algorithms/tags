!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/45968eff/
$(TARGET)	Makefile	/^$(TARGET): CFLAGS += -fPIC$/;"	t
$(TARGET)	Makefile	/^$(TARGET): build $(OBJECTS)$/;"	t
BSSSC_BUFF_LEN	src/bstrlib.c	/^#define BSSSC_BUFF_LEN /;"	d	file:
BSTRLIB_INCLUDE	src/bstrlib.h	/^#define BSTRLIB_INCLUDE$/;"	d
BSTRLIB_NOVSNP	src/bstrlib.c	/^#  define BSTRLIB_NOVSNP$/;"	d	file:
BSTRLIB_NOVSNP	src/bstrlib.h	/^#  define BSTRLIB_NOVSNP$/;"	d
BSTR_BS_BUFF_LENGTH_GET	src/bstrlib.h	/^#define BSTR_BS_BUFF_LENGTH_GET /;"	d
BSTR_ERR	src/bstrlib.h	/^#define BSTR_ERR /;"	d
BSTR_OK	src/bstrlib.h	/^#define BSTR_OK /;"	d
BSTR_VER_MAJOR	src/bstrlib.h	/^#define BSTR_VER_MAJOR /;"	d
BSTR_VER_MINOR	src/bstrlib.h	/^#define BSTR_VER_MINOR /;"	d
BSTR_VER_UPDATE	src/bstrlib.h	/^#define BSTR_VER_UPDATE /;"	d
BS_BUFF_SZ	src/bstrlib.c	/^#define BS_BUFF_SZ /;"	d	file:
CFCLEN	src/bstrlib.c	/^#define CFCLEN /;"	d	file:
CFLAGS	Makefile	/^CFLAGS=-g -O2 -Wall -Wextra -Isrc -rdynamic -DNDEBUG $(OPTFLAGS)$/;"	m
CFLAGS	Makefile	/^dev: CFLAGS= -g -Wall -Isrc -Wall -Wextra -fsanitize=undefined $(OPTFLAGS)$/;"	m
INITIAL_STATIC_FIND_INDEX_COUNT	src/bstrlib.c	/^#define INITIAL_STATIC_FIND_INDEX_COUNT /;"	d	file:
LDFLAGS	Makefile	/^LDFLAGS=$(OPTLIBS)$/;"	m
LDLIBS	Makefile	/^	LDLIBS= -lbsd -L.\/build -lm$/;"	m
LONG_BITS_QTY	src/bstrlib.c	/^#define LONG_BITS_QTY /;"	d	file:
LONG_LOG_BITS_QTY	src/bstrlib.c	/^#define LONG_LOG_BITS_QTY /;"	d	file:
LONG_TYPE	src/bstrlib.c	/^#define LONG_TYPE /;"	d	file:
OBJECTS	Makefile	/^OBJECTS=$(patsubst %.c,%.o,$(SOURCES))$/;"	m
OS	Makefile	/^OS=$(shell uname -s)$/;"	m
PREFIX	Makefile	/^PREFIX?=\/usr\/local$/;"	m
RUN_TESTS	tests/minunit.h	/^#define RUN_TESTS(/;"	d
SOURCES	Makefile	/^SOURCES=$(wildcard src\/**\/*.c src\/*.c)$/;"	m
SO_TARGET	Makefile	/^SO_TARGET=$(patsubst %.a,%.so,$(TARGET))$/;"	m
START_VSNBUFF	src/bstrlib.c	/^#define START_VSNBUFF /;"	d	file:
TARGET	Makefile	/^TARGET=build\/liblcthw.a$/;"	m
TESTS	Makefile	/^TESTS=$(patsubst %.c,%,$(TEST_SRC))$/;"	m
TEST_SRC	Makefile	/^TEST_SRC=$(wildcard tests\/*_tests.c)$/;"	m
_CRT_SECURE_NO_WARNINGS	src/bstrlib.c	/^# define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
__dbg_h__	src/dbg.h	/^#define __dbg_h__$/;"	d
_minunit_h	tests/minunit.h	/^#define _minunit_h$/;"	d
all	Makefile	/^all: $(TARGET) tests$/;"	t
all_tests	tests/bstrlib_tests.c	/^char *all_tests()$/;"	f	typeref:typename:char *
b	src/bstrlib.c	/^	bstring b;$/;"	m	struct:genBstrList	typeref:typename:bstring	file:
bBlockCopy	src/bstrlib.c	/^#define bBlockCopy(/;"	d	file:
bNgetc	src/bstrlib.h	/^typedef int (*bNgetc) (void *parm);$/;"	t	typeref:typename:int (*)(void * parm)
bNread	src/bstrlib.h	/^typedef size_t (* bNread) (void *buff, size_t elsize, size_t nelem, void *parm);$/;"	t	typeref:typename:size_t (*)(void * buff,size_t elsize,size_t nelem,void * parm)
bStream	src/bstrlib.c	/^struct bStream {$/;"	s	file:
balloc	src/bstrlib.c	/^int balloc (bstring b, int olen) {$/;"	f	typeref:typename:int
ballocmin	src/bstrlib.c	/^int ballocmin (bstring b, int len) {$/;"	f	typeref:typename:int
bassign	src/bstrlib.c	/^int bassign (bstring a, const_bstring b) {$/;"	f	typeref:typename:int
bassignStatic	src/bstrlib.h	/^#define bassignStatic(/;"	d
bassignblk	src/bstrlib.c	/^int bassignblk (bstring a, const void * s, int len) {$/;"	f	typeref:typename:int
bassigncstr	src/bstrlib.c	/^int bassigncstr (bstring a, const char * str) {$/;"	f	typeref:typename:int
bassignformat	src/bstrlib.c	/^int bassignformat (bstring b, const char * fmt, ...) {$/;"	f	typeref:typename:int
bassigngets	src/bstrlib.c	/^int bassigngets (bstring b, bNgetc getcPtr, void * parm, char terminator) {$/;"	f	typeref:typename:int
bassignmidstr	src/bstrlib.c	/^int bassignmidstr (bstring a, const_bstring b, int left, int len) {$/;"	f	typeref:typename:int
bcatStatic	src/bstrlib.h	/^#define bcatStatic(/;"	d
bcatblk	src/bstrlib.c	/^int bcatblk (bstring b, const void * s, int len) {$/;"	f	typeref:typename:int
bcatcstr	src/bstrlib.c	/^int bcatcstr (bstring b, const char * s) {$/;"	f	typeref:typename:int
bchar	src/bstrlib.h	/^#define bchar(/;"	d
bchare	src/bstrlib.h	/^#define bchare(/;"	d
bconcat	src/bstrlib.c	/^int bconcat (bstring b0, const_bstring b1) {$/;"	f	typeref:typename:int
bconchar	src/bstrlib.c	/^int bconchar (bstring b, char c) {$/;"	f	typeref:typename:int
bcstrfree	src/bstrlib.c	/^int bcstrfree (char * s) {$/;"	f	typeref:typename:int
bdata	src/bstrlib.h	/^#define bdata(/;"	d
bdatae	src/bstrlib.h	/^#define bdatae(/;"	d
bdataofs	src/bstrlib.h	/^#define bdataofs(/;"	d
bdataofse	src/bstrlib.h	/^#define bdataofse(/;"	d
bdelete	src/bstrlib.c	/^int bdelete (bstring b, int pos, int len) {$/;"	f	typeref:typename:int
bdestroy	src/bstrlib.c	/^int bdestroy (bstring b) {$/;"	f	typeref:typename:int
bfindreplace	src/bstrlib.c	/^int bfindreplace (bstring b, const_bstring find, const_bstring repl,$/;"	f	typeref:typename:int
bfindreplacecaseless	src/bstrlib.c	/^int bfindreplacecaseless (bstring b, const_bstring find, const_bstring repl,$/;"	f	typeref:typename:int
bformat	src/bstrlib.c	/^bstring bformat (const char * fmt, ...) {$/;"	f	typeref:typename:bstring
bformata	src/bstrlib.c	/^int bformata (bstring b, const char * fmt, ...) {$/;"	f	typeref:typename:int
bfromStatic	src/bstrlib.h	/^#define bfromStatic(/;"	d
bfromcstr	src/bstrlib.c	/^bstring bfromcstr (const char * str) {$/;"	f	typeref:typename:bstring
bfromcstralloc	src/bstrlib.c	/^bstring bfromcstralloc (int mlen, const char * str) {$/;"	f	typeref:typename:bstring
bfromcstrrangealloc	src/bstrlib.c	/^bstring bfromcstrrangealloc (int minl, int maxl, const char* str) {$/;"	f	typeref:typename:bstring
bgets	src/bstrlib.c	/^bstring bgets (bNgetc getcPtr, void * parm, char terminator) {$/;"	f	typeref:typename:bstring
bgetsa	src/bstrlib.c	/^int bgetsa (bstring b, bNgetc getcPtr, void * parm, char terminator) {$/;"	f	typeref:typename:int
binchr	src/bstrlib.c	/^int binchr (const_bstring b0, int pos, const_bstring b1) {$/;"	f	typeref:typename:int
binchrCF	src/bstrlib.c	/^static int binchrCF (const unsigned char * data, int len, int pos,$/;"	f	typeref:typename:int	file:
binchrr	src/bstrlib.c	/^int binchrr (const_bstring b0, int pos, const_bstring b1) {$/;"	f	typeref:typename:int
binchrrCF	src/bstrlib.c	/^static int binchrrCF (const unsigned char * data, int pos,$/;"	f	typeref:typename:int	file:
binsert	src/bstrlib.c	/^int binsert (bstring b1, int pos, const_bstring b2, unsigned char fill) {$/;"	f	typeref:typename:int
binsertStatic	src/bstrlib.h	/^#define binsertStatic(/;"	d
binsertblk	src/bstrlib.c	/^int binsertblk (bstring b, int pos, const void * blk, int len,$/;"	f	typeref:typename:int
binsertch	src/bstrlib.c	/^int binsertch (bstring b, int pos, int len, unsigned char fill) {$/;"	f	typeref:typename:int
binstr	src/bstrlib.c	/^int binstr (const_bstring b1, int pos, const_bstring b2) {$/;"	f	typeref:typename:int
binstrcaseless	src/bstrlib.c	/^int binstrcaseless (const_bstring b1, int pos, const_bstring b2) {$/;"	f	typeref:typename:int
binstrr	src/bstrlib.c	/^int binstrr (const_bstring b1, int pos, const_bstring b2) {$/;"	f	typeref:typename:int
binstrrcaseless	src/bstrlib.c	/^int binstrrcaseless (const_bstring b1, int pos, const_bstring b2) {$/;"	f	typeref:typename:int
biseq	src/bstrlib.c	/^int biseq (const_bstring b0, const_bstring b1) {$/;"	f	typeref:typename:int
biseqStatic	src/bstrlib.h	/^#define biseqStatic(/;"	d
biseqblk	src/bstrlib.c	/^int biseqblk (const_bstring b, const void * blk, int len) {$/;"	f	typeref:typename:int
biseqcaseless	src/bstrlib.c	/^int biseqcaseless (const_bstring b0, const_bstring b1) {$/;"	f	typeref:typename:int
biseqcaselessStatic	src/bstrlib.h	/^#define biseqcaselessStatic(/;"	d
biseqcaselessblk	src/bstrlib.c	/^int biseqcaselessblk (const_bstring b, const void * blk, int len) {$/;"	f	typeref:typename:int
biseqcstr	src/bstrlib.c	/^int biseqcstr (const_bstring b, const char * s) {$/;"	f	typeref:typename:int
biseqcstrcaseless	src/bstrlib.c	/^int biseqcstrcaseless (const_bstring b, const char * s) {$/;"	f	typeref:typename:int
bisstemeqStatic	src/bstrlib.h	/^#define bisstemeqStatic(/;"	d
bisstemeqblk	src/bstrlib.c	/^int bisstemeqblk (const_bstring b0, const void * blk, int len) {$/;"	f	typeref:typename:int
bisstemeqcaselessStatic	src/bstrlib.h	/^#define bisstemeqcaselessStatic(/;"	d
bisstemeqcaselessblk	src/bstrlib.c	/^int bisstemeqcaselessblk (const_bstring b0, const void * blk, int len) {$/;"	f	typeref:typename:int
biswriteprotected	src/bstrlib.h	/^#define biswriteprotected(/;"	d
bjoin	src/bstrlib.c	/^bstring bjoin (const struct bstrList * bl, const_bstring sep) {$/;"	f	typeref:typename:bstring
bjoinStatic	src/bstrlib.h	/^#define bjoinStatic(/;"	d
bjoinblk	src/bstrlib.c	/^bstring bjoinblk (const struct bstrList * bl, const void * blk, int len) {$/;"	f	typeref:typename:bstring
bl	src/bstrlib.c	/^	struct bstrList * bl;$/;"	m	struct:genBstrList	typeref:struct:bstrList *	file:
blength	src/bstrlib.h	/^#define blength(/;"	d
blengthe	src/bstrlib.h	/^#define blengthe(/;"	d
blk2bstr	src/bstrlib.c	/^bstring blk2bstr (const void * blk, int len) {$/;"	f	typeref:typename:bstring
blk2tbstr	src/bstrlib.h	/^#define blk2tbstr(/;"	d
bltrimws	src/bstrlib.c	/^int bltrimws (bstring b) {$/;"	f	typeref:typename:int
bmid2tbstr	src/bstrlib.h	/^#define bmid2tbstr(/;"	d
bmidstr	src/bstrlib.c	/^bstring bmidstr (const_bstring b, int left, int len) {$/;"	f	typeref:typename:bstring
bninchr	src/bstrlib.c	/^int bninchr (const_bstring b0, int pos, const_bstring b1) {$/;"	f	typeref:typename:int
bninchrr	src/bstrlib.c	/^int bninchrr (const_bstring b0, int pos, const_bstring b1) {$/;"	f	typeref:typename:int
bpattern	src/bstrlib.c	/^int bpattern (bstring b, int len) {$/;"	f	typeref:typename:int
bread	src/bstrlib.c	/^bstring bread (bNread readPtr, void * parm) {$/;"	f	typeref:typename:bstring
breada	src/bstrlib.c	/^int breada (bstring b, bNread readPtr, void * parm) {$/;"	f	typeref:typename:int
breplace	src/bstrlib.c	/^int breplace (bstring b1, int pos, int len, const_bstring b2,$/;"	f	typeref:typename:int
brtrimws	src/bstrlib.c	/^int brtrimws (bstring b) {$/;"	f	typeref:typename:int
bsStatic	src/bstrlib.h	/^# define bsStatic(/;"	d
bsStaticBlkParms	src/bstrlib.h	/^#define bsStaticBlkParms(/;"	d
bsStaticMlen	src/bstrlib.h	/^#define bsStaticMlen(/;"	d
bsbufflength	src/bstrlib.c	/^int bsbufflength (struct bStream * s, int sz) {$/;"	f	typeref:typename:int
bscb	src/bstrlib.c	/^static int bscb (void * parm, int ofs, int len) {$/;"	f	typeref:typename:int	file:
bsclose	src/bstrlib.c	/^void * bsclose (struct bStream * s) {$/;"	f	typeref:typename:void *
bseof	src/bstrlib.c	/^int bseof (const struct bStream * s) {$/;"	f	typeref:typename:int
bsetstr	src/bstrlib.c	/^int bsetstr (bstring b0, int pos, const_bstring b1, unsigned char fill) {$/;"	f	typeref:typename:int
bsopen	src/bstrlib.c	/^struct bStream * bsopen (bNread readPtr, void * parm) {$/;"	f	typeref:struct:bStream *
bspeek	src/bstrlib.c	/^int bspeek (bstring r, const struct bStream * s) {$/;"	f	typeref:typename:int
bsplit	src/bstrlib.c	/^struct bstrList * bsplit (const_bstring str, unsigned char splitChar) {$/;"	f	typeref:struct:bstrList *
bsplitcb	src/bstrlib.c	/^int bsplitcb (const_bstring str, unsigned char splitChar, int pos,$/;"	f	typeref:typename:int
bsplits	src/bstrlib.c	/^struct bstrList * bsplits (const_bstring str, const_bstring splitStr) {$/;"	f	typeref:struct:bstrList *
bsplitscb	src/bstrlib.c	/^int bsplitscb (const_bstring str, const_bstring splitStr, int pos,$/;"	f	typeref:typename:int
bsplitstr	src/bstrlib.c	/^struct bstrList * bsplitstr (const_bstring str, const_bstring splitStr) {$/;"	f	typeref:struct:bstrList *
bsplitstrcb	src/bstrlib.c	/^int bsplitstrcb (const_bstring str, const_bstring splitStr, int pos,$/;"	f	typeref:typename:int
bsread	src/bstrlib.c	/^int bsread (bstring r, struct bStream * s, int n) {$/;"	f	typeref:typename:int
bsreada	src/bstrlib.c	/^int bsreada (bstring r, struct bStream * s, int n) {$/;"	f	typeref:typename:int
bsreadln	src/bstrlib.c	/^int bsreadln (bstring r, struct bStream * s, char terminator) {$/;"	f	typeref:typename:int
bsreadlna	src/bstrlib.c	/^int bsreadlna (bstring r, struct bStream * s, char terminator) {$/;"	f	typeref:typename:int
bsreadlns	src/bstrlib.c	/^int bsreadlns (bstring r, struct bStream * s, const_bstring term) {$/;"	f	typeref:typename:int
bsreadlnsa	src/bstrlib.c	/^int bsreadlnsa (bstring r, struct bStream * s, const_bstring term) {$/;"	f	typeref:typename:int
bssplitscb	src/bstrlib.c	/^int bssplitscb (struct bStream * s, const_bstring splitStr,$/;"	f	typeref:typename:int
bssplitstrcb	src/bstrlib.c	/^int bssplitstrcb (struct bStream * s, const_bstring splitStr,$/;"	f	typeref:typename:int
bstr2cstr	src/bstrlib.c	/^char * bstr2cstr (const_bstring b, char z) {$/;"	f	typeref:typename:char *
bstrList	src/bstrlib.h	/^struct bstrList {$/;"	s
bstrListAlloc	src/bstrlib.c	/^int bstrListAlloc (struct bstrList * sl, int msz) {$/;"	f	typeref:typename:int
bstrListAllocMin	src/bstrlib.c	/^int bstrListAllocMin (struct bstrList * sl, int msz) {$/;"	f	typeref:typename:int
bstrListCreate	src/bstrlib.c	/^struct bstrList * bstrListCreate (void) {$/;"	f	typeref:struct:bstrList *
bstrListDestroy	src/bstrlib.c	/^int bstrListDestroy (struct bstrList * sl) {$/;"	f	typeref:typename:int
bstr__alloc	src/bstrlib.c	/^#define bstr__alloc(/;"	d	file:
bstr__alloc	src/bstrlib.c	/^void* bstr__alloc (size_t sz) {$/;"	f	typeref:typename:void *
bstr__free	src/bstrlib.c	/^#define bstr__free(/;"	d	file:
bstr__memchr	src/bstrlib.c	/^#define bstr__memchr(/;"	d	file:
bstr__memcmp	src/bstrlib.c	/^#define bstr__memcmp(/;"	d	file:
bstr__memcpy	src/bstrlib.c	/^#define bstr__memcpy(/;"	d	file:
bstr__memmove	src/bstrlib.c	/^#define bstr__memmove(/;"	d	file:
bstr__memset	src/bstrlib.c	/^#define bstr__memset(/;"	d	file:
bstr__realloc	src/bstrlib.c	/^#define bstr__realloc(/;"	d	file:
bstrchr	src/bstrlib.h	/^#define bstrchr(/;"	d
bstrchrp	src/bstrlib.c	/^int bstrchrp (const_bstring b, int c, int pos) {$/;"	f	typeref:typename:int
bstrcmp	src/bstrlib.c	/^int bstrcmp (const_bstring b0, const_bstring b1) {$/;"	f	typeref:typename:int
bstrcpy	src/bstrlib.c	/^bstring bstrcpy (const_bstring b) {$/;"	f	typeref:typename:bstring
bstricmp	src/bstrlib.c	/^int bstricmp (const_bstring b0, const_bstring b1) {$/;"	f	typeref:typename:int
bstring	src/bstrlib.h	/^typedef struct tagbstring * bstring;$/;"	t	typeref:struct:tagbstring *
bstrncmp	src/bstrlib.c	/^int bstrncmp (const_bstring b0, const_bstring b1, int n) {$/;"	f	typeref:typename:int
bstrnicmp	src/bstrlib.c	/^int bstrnicmp (const_bstring b0, const_bstring b1, int n) {$/;"	f	typeref:typename:int
bstrrchr	src/bstrlib.h	/^#define bstrrchr(/;"	d
bstrrchrp	src/bstrlib.c	/^int bstrrchrp (const_bstring b, int c, int pos) {$/;"	f	typeref:typename:int
bsunread	src/bstrlib.c	/^int bsunread (struct bStream * s, const_bstring b) {$/;"	f	typeref:typename:int
btfromblk	src/bstrlib.h	/^#define btfromblk(/;"	d
btfromblkltrimws	src/bstrlib.h	/^#define btfromblkltrimws(/;"	d
btfromblkrtrimws	src/bstrlib.h	/^#define btfromblkrtrimws(/;"	d
btfromblktrimws	src/bstrlib.h	/^#define btfromblktrimws(/;"	d
btfromcstr	src/bstrlib.h	/^#define btfromcstr(/;"	d
btolower	src/bstrlib.c	/^int btolower (bstring b) {$/;"	f	typeref:typename:int
btoupper	src/bstrlib.c	/^int btoupper (bstring b) {$/;"	f	typeref:typename:int
btrimws	src/bstrlib.c	/^int btrimws (bstring b) {$/;"	f	typeref:typename:int
btrunc	src/bstrlib.c	/^int btrunc (bstring b, int n) {$/;"	f	typeref:typename:int
buff	src/bstrlib.c	/^	bstring buff;		\/* Buffer for over-reads *\/$/;"	m	struct:bStream	typeref:typename:bstring	file:
build	Makefile	/^build:$/;"	t
buildCharField	src/bstrlib.c	/^static int buildCharField (struct charField * cf, const_bstring b) {$/;"	f	typeref:typename:int	file:
bvcformata	src/bstrlib.c	/^int bvcformata (bstring b, int count, const char * fmt, va_list arg) {$/;"	f	typeref:typename:int
bvformata	src/bstrlib.h	/^#define bvformata(/;"	d
bwriteallow	src/bstrlib.h	/^#define bwriteallow(/;"	d
bwriteprotect	src/bstrlib.h	/^#define bwriteprotect(/;"	d
charField	src/bstrlib.c	/^struct charField { LONG_TYPE content[CFCLEN]; };$/;"	s	file:
charField	src/bstrlib.c	/^struct charField { unsigned char content[CFCLEN]; };$/;"	s	file:
check	Makefile	/^check:$/;"	t
check	src/dbg.h	/^#define check(/;"	d
check_debug	src/dbg.h	/^#define check_debug(/;"	d
check_mem	src/dbg.h	/^#define check_mem(/;"	d
clean	Makefile	/^clean: $/;"	t
clean_errno	src/dbg.h	/^#define clean_errno(/;"	d
const_bstring	src/bstrlib.h	/^typedef const struct tagbstring * const_bstring;$/;"	t	typeref:typename:const struct tagbstring *
content	src/bstrlib.c	/^struct charField { LONG_TYPE content[CFCLEN]; };$/;"	m	struct:charField	typeref:typename:LONG_TYPE[]	file:
content	src/bstrlib.c	/^struct charField { unsigned char content[CFCLEN]; };$/;"	m	struct:charField	typeref:typename:unsigned char[]	file:
cstr2bstr	src/bstrlib.h	/^#define cstr2bstr /;"	d
cstr2tbstr	src/bstrlib.h	/^#define cstr2tbstr /;"	d
data	src/bstrlib.h	/^	unsigned char * data;$/;"	m	struct:tagbstring	typeref:typename:unsigned char *
debug	src/dbg.h	/^#define debug(/;"	d
dev	Makefile	/^dev: CFLAGS= -g -Wall -Isrc -Wall -Wextra -fsanitize=undefined $(OPTFLAGS)$/;"	t
dev	Makefile	/^dev: all$/;"	t
downcase	src/bstrlib.c	/^#define downcase(/;"	d	file:
entry	src/bstrlib.h	/^    bstring * entry;$/;"	m	struct:bstrList	typeref:typename:bstring *
exvsnprintf	src/bstrlib.c	/^#define exvsnprintf(/;"	d	file:
findreplaceengine	src/bstrlib.c	/^static int findreplaceengine (bstring b, const_bstring find,$/;"	f	typeref:typename:int	file:
genBstrList	src/bstrlib.c	/^struct genBstrList {$/;"	s	file:
install	Makefile	/^install: all$/;"	t
instr_fnptr	src/bstrlib.c	/^typedef int (*instr_fnptr) (const_bstring s1, int pos, const_bstring s2);$/;"	t	typeref:typename:int (*)(const_bstring s1,int pos,const_bstring s2)	file:
invertCharField	src/bstrlib.c	/^static void invertCharField (struct charField * cf) {$/;"	f	typeref:typename:void	file:
isEOF	src/bstrlib.c	/^	int isEOF;			\/* track file's EOF state *\/$/;"	m	struct:bStream	typeref:typename:int	file:
log_err	src/dbg.h	/^#define log_err(/;"	d
log_info	src/dbg.h	/^#define log_info(/;"	d
log_warn	src/dbg.h	/^#define log_warn(/;"	d
maxBuffSz	src/bstrlib.c	/^	int maxBuffSz;$/;"	m	struct:bStream	typeref:typename:int	file:
mlen	src/bstrlib.h	/^	int mlen;$/;"	m	struct:tagbstring	typeref:typename:int
mlen	src/bstrlib.h	/^    int qty, mlen;$/;"	m	struct:bstrList	typeref:typename:int
mu_assert	tests/minunit.h	/^#define mu_assert(/;"	d
mu_run_test	tests/minunit.h	/^#define mu_run_test(/;"	d
mu_suite_start	tests/minunit.h	/^#define mu_suite_start(/;"	d
parm	src/bstrlib.c	/^	void * parm;		\/* The stream handle for core stream *\/$/;"	m	struct:bStream	typeref:typename:void *	file:
qty	src/bstrlib.h	/^    int qty, mlen;$/;"	m	struct:bstrList	typeref:typename:int
readFnPtr	src/bstrlib.c	/^	bNread readFnPtr;	\/* fread compatible fnptr for core stream *\/$/;"	m	struct:bStream	typeref:typename:bNread	file:
sentinel	src/dbg.h	/^#define sentinel(/;"	d
setInCharField	src/bstrlib.c	/^#define setInCharField(/;"	d	file:
slen	src/bstrlib.h	/^	int slen;$/;"	m	struct:tagbstring	typeref:typename:int
snapUpSize	src/bstrlib.c	/^static int snapUpSize (int i) {$/;"	f	typeref:typename:int	file:
tagbstring	src/bstrlib.h	/^struct tagbstring {$/;"	s
testInCharField	src/bstrlib.c	/^#define testInCharField(/;"	d	file:
test_bassign	tests/bstrlib_tests.c	/^char * test_bassign()$/;"	f	typeref:typename:char *
test_bassignstr	tests/bstrlib_tests.c	/^char * test_bassignstr()$/;"	f	typeref:typename:char *
test_bchar	tests/bstrlib_tests.c	/^char * test_bchar()$/;"	f	typeref:typename:char *
test_bconcat	tests/bstrlib_tests.c	/^char * test_bconcat()$/;"	f	typeref:typename:char *
test_bdata	tests/bstrlib_tests.c	/^char * test_bdata()$/;"	f	typeref:typename:char *
test_bdestroy	tests/bstrlib_tests.c	/^char * test_bdestroy()$/;"	f	typeref:typename:char *
test_bfindreplace	tests/bstrlib_tests.c	/^char * test_bfindreplace()$/;"	f	typeref:typename:char *
test_bformat	tests/bstrlib_tests.c	/^char * test_bformat()$/;"	f	typeref:typename:char *
test_bfromcstr	tests/bstrlib_tests.c	/^char * test_bfromcstr()$/;"	f	typeref:typename:char *
test_binstr	tests/bstrlib_tests.c	/^char * test_binstr()$/;"	f	typeref:typename:char *
test_biseq	tests/bstrlib_tests.c	/^char * test_biseq()$/;"	f	typeref:typename:char *
test_blength	tests/bstrlib_tests.c	/^char * test_blength()$/;"	f	typeref:typename:char *
test_blk2bstr	tests/bstrlib_tests.c	/^char * test_blk2bstr()$/;"	f	typeref:typename:char *
test_bsplit	tests/bstrlib_tests.c	/^char * test_bsplit()$/;"	f	typeref:typename:char *
test_bstrcpy	tests/bstrlib_tests.c	/^char * test_bstrcpy()$/;"	f	typeref:typename:char *
test_bstricmp	tests/bstrlib_tests.c	/^char * test_bstricmp()$/;"	f	typeref:typename:char *
tests	Makefile	/^tests: $(TESTS)$/;"	t
tests	Makefile	/^tests: LDLIBS += $(TARGET)$/;"	t
tests_run	tests/minunit.h	/^int tests_run;$/;"	v	typeref:typename:int
upcase	src/bstrlib.c	/^#define   upcase(/;"	d	file:
valgrind	Makefile	/^valgrind:$/;"	t
wspace	src/bstrlib.c	/^#define   wspace(/;"	d	file:
